{"ast":null,"code":"var _jsxFileName = \"/Users/yiannis/Desktop/Weather-app-react/project/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport BigTitle from '../components/BigTitle';\nimport SearchBar from '../components/SearchBar';\nimport WeatherCardsContainer from '../components/WeatherCardsContainer';\nimport { fetchWeatherData } from '../services/api';\nimport { getCache } from '../utils/cache';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const cache = getCache();\n  const currentList = cache.slice(0, 3).reverse();\n  const [weatherData, setWeatherData] = useState(currentList);\n  const handleSearch = async (city, resetQuery) => {\n    try {\n      const newWeather = await fetchWeatherData(city); //  fetchWeatherData should return a weather object\n\n      // Check if city obtained by API already exists in the UI state\n      if (!currentList.find(e => e.city === newWeather.city)) {\n        setWeatherData(prevData => {\n          const updatedData = [...prevData, newWeather];\n          if (updatedData.length > 3)\n            // Limit to 3 cards\n            updatedData.shift();\n          resetQuery(); // Clear the search input after search        \n          return updatedData;\n        });\n      } else {\n        alert(newWeather.city + ' already exists in the list.');\n      }\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n      alert(city + ' not found. Please try another city.'); // Error popup an alert popup\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BigTitle, {\n      title: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(WeatherCardsContainer, {\n      weatherData: weatherData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n};\n_s(Home, \"V9VR0uheDzMSZ4UHVEzzqUhdg20=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","BigTitle","SearchBar","WeatherCardsContainer","fetchWeatherData","getCache","jsxDEV","_jsxDEV","Home","_s","cache","currentList","slice","reverse","weatherData","setWeatherData","handleSearch","city","resetQuery","newWeather","find","e","prevData","updatedData","length","shift","alert","error","console","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","_c","$RefreshReg$"],"sources":["/Users/yiannis/Desktop/Weather-app-react/project/src/pages/Home.js"],"sourcesContent":["import { useState } from 'react';\nimport BigTitle from '../components/BigTitle';\nimport SearchBar from '../components/SearchBar';\nimport WeatherCardsContainer from '../components/WeatherCardsContainer';\nimport { fetchWeatherData } from '../services/api'; \nimport { getCache } from '../utils/cache';\n\n\nconst Home = () => {\n\n      const cache = getCache();\n      const currentList = cache.slice(0,3).reverse();\n      const [weatherData, setWeatherData] = useState(currentList);\n\n      const handleSearch = async (city, resetQuery) => {\n        try {\n          const newWeather = await fetchWeatherData(city); //  fetchWeatherData should return a weather object\n\n          // Check if city obtained by API already exists in the UI state\n          if (!currentList.find(e => e.city === newWeather.city)) {\n            setWeatherData(prevData => {\n              const updatedData = [...prevData, newWeather]; \n              if (updatedData.length > 3)  // Limit to 3 cards\n                updatedData.shift();    \n                resetQuery(); // Clear the search input after search        \n            return updatedData;\n            });\n          } else {\n            alert(newWeather.city + ' already exists in the list.');\n          }\n        } catch (error) {\n          console.error('Error fetching weather data:', error); \n          alert( city+ ' not found. Please try another city.'); // Error popup an alert popup\n        }\n      };\n    \n    return (\n      <div>\n        <BigTitle title=\"Weather App\"/>\n        <SearchBar onSearch={handleSearch}/>\n        <WeatherCardsContainer weatherData={weatherData}/>\n      </div>\n    );\n  };\n  \n  export default Home;\n  "],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,qBAAqB,MAAM,qCAAqC;AACvE,SAASC,gBAAgB,QAAQ,iBAAiB;AAClD,SAASC,QAAQ,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEb,MAAMC,KAAK,GAAGL,QAAQ,CAAC,CAAC;EACxB,MAAMM,WAAW,GAAGD,KAAK,CAACE,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;EAC9C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAACW,WAAW,CAAC;EAE3D,MAAMK,YAAY,GAAG,MAAAA,CAAOC,IAAI,EAAEC,UAAU,KAAK;IAC/C,IAAI;MACF,MAAMC,UAAU,GAAG,MAAMf,gBAAgB,CAACa,IAAI,CAAC,CAAC,CAAC;;MAEjD;MACA,IAAI,CAACN,WAAW,CAACS,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACJ,IAAI,KAAKE,UAAU,CAACF,IAAI,CAAC,EAAE;QACtDF,cAAc,CAACO,QAAQ,IAAI;UACzB,MAAMC,WAAW,GAAG,CAAC,GAAGD,QAAQ,EAAEH,UAAU,CAAC;UAC7C,IAAII,WAAW,CAACC,MAAM,GAAG,CAAC;YAAG;YAC3BD,WAAW,CAACE,KAAK,CAAC,CAAC;UACnBP,UAAU,CAAC,CAAC,CAAC,CAAC;UAClB,OAAOK,WAAW;QAClB,CAAC,CAAC;MACJ,CAAC,MAAM;QACLG,KAAK,CAACP,UAAU,CAACF,IAAI,GAAG,8BAA8B,CAAC;MACzD;IACF,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDD,KAAK,CAAET,IAAI,GAAE,sCAAsC,CAAC,CAAC,CAAC;IACxD;EACF,CAAC;EAEH,oBACEV,OAAA;IAAAsB,QAAA,gBACEtB,OAAA,CAACN,QAAQ;MAAC6B,KAAK,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC/B3B,OAAA,CAACL,SAAS;MAACiC,QAAQ,EAAEnB;IAAa;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACpC3B,OAAA,CAACJ,qBAAqB;MAACW,WAAW,EAAEA;IAAY;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV,CAAC;AAACzB,EAAA,CAnCED,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AAqCR,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}