{"ast":null,"code":"import{useParams}from'react-router-dom';import{getFromCache}from'../utils/cache';import BackButton from'../components/BackButton';import WeatherDetail from'../components/WeatherDetail';import'../styles/Details.css';import getDayNames from'../utils/computeDays';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const Details=()=>{const{city}=useParams();const weatherData=getFromCache(city);const days=getDayNames();if(!weatherData)return/*#__PURE__*/_jsxs(\"div\",{children:[\"No data found for \",city]});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:weatherData.city+\", \"+weatherData.country}),/*#__PURE__*/_jsxs(\"div\",{className:\"weather-details-container\",children:[/*#__PURE__*/_jsx(WeatherDetail,{day:days.today,icon:weatherData.icon,currentTemp:weatherData.temperature_c,minTemp:weatherData.forecast[0].day.mintemp_c,maxTemp:weatherData.forecast[0].day.maxtemp_c,sunRise:weatherData.forecast[0].astro.sunrise,sunSet:weatherData.forecast[0].astro.sunset,avghumidity:weatherData.forecast[0].day.avghumidity}),/*#__PURE__*/_jsx(WeatherDetail,{day:days.tomorrow,minTemp:weatherData.forecast[1].day.mintemp_c,maxTemp:weatherData.forecast[1].day.maxtemp_c,sunRise:weatherData.forecast[1].astro.sunrise,sunSet:weatherData.forecast[1].astro.sunset,avghumidity:weatherData.forecast[1].day.avghumidity}),/*#__PURE__*/_jsx(WeatherDetail,{day:days.dayAfterTomorrow,minTemp:weatherData.forecast[2].day.mintemp_c,maxTemp:weatherData.forecast[2].day.maxtemp_c,sunRise:weatherData.forecast[2].astro.sunrise,sunSet:weatherData.forecast[2].astro.sunset,avghumidity:weatherData.forecast[2].day.avghumidity})]}),/*#__PURE__*/_jsx(BackButton,{})]});};export default Details;","map":{"version":3,"names":["useParams","getFromCache","BackButton","WeatherDetail","getDayNames","jsxs","_jsxs","jsx","_jsx","Details","city","weatherData","days","children","country","className","day","today","icon","currentTemp","temperature_c","minTemp","forecast","mintemp_c","maxTemp","maxtemp_c","sunRise","astro","sunrise","sunSet","sunset","avghumidity","tomorrow","dayAfterTomorrow"],"sources":["/Users/yiannis/Desktop/Weather-app-react/project/src/pages/Details.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { getFromCache } from '../utils/cache';\nimport BackButton from '../components/BackButton';\nimport WeatherDetail from '../components/WeatherDetail'; \nimport '../styles/Details.css';\nimport getDayNames from '../utils/computeDays';\n\n\n\nconst Details = () => {\n    const { city } = useParams();\n    const weatherData = getFromCache(city);\n    const days = getDayNames();\n    \n  \n    if (!weatherData) \n      return <div>No data found for {city}</div>;\n    \n  return (\n    <div>\n      <h1>{weatherData.city + \", \" + weatherData.country}</h1>\n      <div className=\"weather-details-container\">\n        <WeatherDetail \n          day= {days.today}\n          icon = {weatherData.icon}\n          currentTemp = {weatherData.temperature_c}\n          minTemp = {weatherData.forecast[0].day.mintemp_c}\n          maxTemp = {weatherData.forecast[0].day.maxtemp_c}\n          sunRise = {weatherData.forecast[0].astro.sunrise}\n          sunSet = {weatherData.forecast[0].astro.sunset}\n          avghumidity={weatherData.forecast[0].day.avghumidity}\n        />\n\n        <WeatherDetail \n          day= {days.tomorrow}\n          minTemp = {weatherData.forecast[1].day.mintemp_c}\n          maxTemp = {weatherData.forecast[1].day.maxtemp_c}\n          sunRise = {weatherData.forecast[1].astro.sunrise}\n          sunSet = {weatherData.forecast[1].astro.sunset}\n          avghumidity={weatherData.forecast[1].day.avghumidity}\n        />\n\n        <WeatherDetail \n          day= {days.dayAfterTomorrow}\n          minTemp = {weatherData.forecast[2].day.mintemp_c}\n          maxTemp = {weatherData.forecast[2].day.maxtemp_c}\n          sunRise = {weatherData.forecast[2].astro.sunrise}\n          sunSet = {weatherData.forecast[2].astro.sunset}\n          avghumidity={weatherData.forecast[2].day.avghumidity}\n        />\n      </div>\n\n      <BackButton />\n    </div>\n  );\n};\n\nexport default Details;"],"mappings":"AAAA,OAASA,SAAS,KAAQ,kBAAkB,CAC5C,OAASC,YAAY,KAAQ,gBAAgB,CAC7C,MAAO,CAAAC,UAAU,KAAM,0BAA0B,CACjD,MAAO,CAAAC,aAAa,KAAM,6BAA6B,CACvD,MAAO,uBAAuB,CAC9B,MAAO,CAAAC,WAAW,KAAM,sBAAsB,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAI/C,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CAClB,KAAM,CAAEC,IAAK,CAAC,CAAGV,SAAS,CAAC,CAAC,CAC5B,KAAM,CAAAW,WAAW,CAAGV,YAAY,CAACS,IAAI,CAAC,CACtC,KAAM,CAAAE,IAAI,CAAGR,WAAW,CAAC,CAAC,CAG1B,GAAI,CAACO,WAAW,CACd,mBAAOL,KAAA,QAAAO,QAAA,EAAK,oBAAkB,CAACH,IAAI,EAAM,CAAC,CAE9C,mBACEJ,KAAA,QAAAO,QAAA,eACEL,IAAA,OAAAK,QAAA,CAAKF,WAAW,CAACD,IAAI,CAAG,IAAI,CAAGC,WAAW,CAACG,OAAO,CAAK,CAAC,cACxDR,KAAA,QAAKS,SAAS,CAAC,2BAA2B,CAAAF,QAAA,eACxCL,IAAA,CAACL,aAAa,EACZa,GAAG,CAAGJ,IAAI,CAACK,KAAM,CACjBC,IAAI,CAAIP,WAAW,CAACO,IAAK,CACzBC,WAAW,CAAIR,WAAW,CAACS,aAAc,CACzCC,OAAO,CAAIV,WAAW,CAACW,QAAQ,CAAC,CAAC,CAAC,CAACN,GAAG,CAACO,SAAU,CACjDC,OAAO,CAAIb,WAAW,CAACW,QAAQ,CAAC,CAAC,CAAC,CAACN,GAAG,CAACS,SAAU,CACjDC,OAAO,CAAIf,WAAW,CAACW,QAAQ,CAAC,CAAC,CAAC,CAACK,KAAK,CAACC,OAAQ,CACjDC,MAAM,CAAIlB,WAAW,CAACW,QAAQ,CAAC,CAAC,CAAC,CAACK,KAAK,CAACG,MAAO,CAC/CC,WAAW,CAAEpB,WAAW,CAACW,QAAQ,CAAC,CAAC,CAAC,CAACN,GAAG,CAACe,WAAY,CACtD,CAAC,cAEFvB,IAAA,CAACL,aAAa,EACZa,GAAG,CAAGJ,IAAI,CAACoB,QAAS,CACpBX,OAAO,CAAIV,WAAW,CAACW,QAAQ,CAAC,CAAC,CAAC,CAACN,GAAG,CAACO,SAAU,CACjDC,OAAO,CAAIb,WAAW,CAACW,QAAQ,CAAC,CAAC,CAAC,CAACN,GAAG,CAACS,SAAU,CACjDC,OAAO,CAAIf,WAAW,CAACW,QAAQ,CAAC,CAAC,CAAC,CAACK,KAAK,CAACC,OAAQ,CACjDC,MAAM,CAAIlB,WAAW,CAACW,QAAQ,CAAC,CAAC,CAAC,CAACK,KAAK,CAACG,MAAO,CAC/CC,WAAW,CAAEpB,WAAW,CAACW,QAAQ,CAAC,CAAC,CAAC,CAACN,GAAG,CAACe,WAAY,CACtD,CAAC,cAEFvB,IAAA,CAACL,aAAa,EACZa,GAAG,CAAGJ,IAAI,CAACqB,gBAAiB,CAC5BZ,OAAO,CAAIV,WAAW,CAACW,QAAQ,CAAC,CAAC,CAAC,CAACN,GAAG,CAACO,SAAU,CACjDC,OAAO,CAAIb,WAAW,CAACW,QAAQ,CAAC,CAAC,CAAC,CAACN,GAAG,CAACS,SAAU,CACjDC,OAAO,CAAIf,WAAW,CAACW,QAAQ,CAAC,CAAC,CAAC,CAACK,KAAK,CAACC,OAAQ,CACjDC,MAAM,CAAIlB,WAAW,CAACW,QAAQ,CAAC,CAAC,CAAC,CAACK,KAAK,CAACG,MAAO,CAC/CC,WAAW,CAAEpB,WAAW,CAACW,QAAQ,CAAC,CAAC,CAAC,CAACN,GAAG,CAACe,WAAY,CACtD,CAAC,EACC,CAAC,cAENvB,IAAA,CAACN,UAAU,GAAE,CAAC,EACX,CAAC,CAEV,CAAC,CAED,cAAe,CAAAO,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}